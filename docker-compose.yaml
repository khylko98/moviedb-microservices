version: '3'

services:
  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - db
  
  db:
    container_name: db
    image: postgres:15
    environment:
      POSTGRES_DB: moviedb
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - db:/data/postgres
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5332:5432"
    networks:
      - db
  
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - db
  
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:latest
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
      KAFKA_MIN_INSYNC_REPLICAS: '1'
    ports:
      - "9092:9092"
    expose:
      - '29092'
    depends_on:
      - zookeeper
    networks:
      - db
  
  init-kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka
    networks:
      - db
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic user-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic user-delete-topic --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic movie-topic --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29092 --list
      "
  
  service-registry:
    container_name: service-registry
    build: ./service-registry
    ports:
      - "8761:8761"
    networks:
      - db
    restart: on-failure
  
  config-server:
    container_name: config-server
    build: ./config-server
    ports:
      - "8088:8088"
    depends_on:
      - service-registry
    networks:
      - db
    restart: on-failure
  
  api-gateway:
    container_name: api-gateway
    build: ./api-gateway
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin:9411/api/v2/spans
    ports:
      - "8060:8060"
    depends_on:
      - config-server
      - zipkin
    networks:
      - db
    restart: on-failure
  
  user-service:
    container_name: user-service
    build: ./user-service
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin:9411/api/v2/spans
    ports:
      - "8081:8081"
    depends_on:
      - config-server
      - zipkin
      - init-kafka
      - db
    networks:
      - db
    restart: on-failure
  
  movie-service:
    container_name: movie-service
    build: ./movie-service
    environment:
      MANAGEMENT.ZIPKIN.TRACING.ENDPOINT:  http://zipkin:9411/api/v2/spans
    ports:
      - "8082:8082"
    depends_on:
      - config-server
      - zipkin
      - init-kafka
      - db
    networks:
      - db
    restart: on-failure

networks:
  db:
    driver: bridge

volumes:
  db:
